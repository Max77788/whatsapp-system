import type { Metadata } from "next";
import localFont from "next/font/local";
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import "./globals.css";
import path from 'path';
import fs from 'fs';
// import { startCronJob } from "@/lib/cron";

// Ensure BASE64_GOOGLE_CREDENTIALS is set in the environment variables
if (!process.env.BASE64_GOOGLE_CREDENTIALS) {
  console.error('Error: BASE64_GOOGLE_CREDENTIALS environment variable is not set.');
  process.exit(1);
}

const base64Credentials = process.env.BASE64_GOOGLE_CREDENTIALS;
const tempFilePath = path.join(__dirname, 'temp-google-credentials.json');

try {
  // Decode the Base64 credentials and write to a temporary file
  const credentials = Buffer.from(base64Credentials, 'base64').toString('utf-8');
  fs.writeFileSync(tempFilePath, credentials);

  // Set the environment variable for Google Cloud
  process.env.GOOGLE_APPLICATION_CREDENTIALS = tempFilePath;

  console.log('Google Cloud credentials set up.');

  // Your code that uses the credentials goes here
  // Example: console.log('Running operations with Google Cloud...');
} catch (error) {
  console.error('Error setting up Google Cloud credentials:', error);
  process.exit(1);
} finally {
  // Cleanup: delete the temporary credentials file
  if (fs.existsSync(tempFilePath)) {
    // fs.unlinkSync(tempFilePath);
    // console.log('Temporary Google Cloud credentials file deleted.');
  }
}

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "WhatsApp Lead Management",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // startCronJob();
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ToastContainer 
          position="top-right" 
          autoClose={3000} 
          hideProgressBar={false} 
          newestOnTop={false} 
          closeOnClick 
          rtl={false} 
          pauseOnFocusLoss 
          draggable 
          pauseOnHover 
        />
        {children}
        <footer className="bg-black text-white py-4">
          <div className="container mx-auto text-center">
            <p className="text-sm">&copy; {new Date().getFullYear()} WhatsApp Lead Management. All rights reserved.</p>
            <div className="flex justify-center space-x-4 mt-2">
              <a href="#" className="hover:underline">Privacy Policy</a>
              <a href="#" className="hover:underline">Terms of Service</a>
              <a href="#" className="hover:underline">Contact Us</a>
            </div>
          </div>
        </footer>
      </body>
      
    </html>
  );
}
